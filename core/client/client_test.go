package client

import (
	"encoding/json"
	"fmt"
	"github.com/hpb-project/HCash-SDK/common/types"
	"github.com/hpb-project/HCash-SDK/core/ebigint"
	"gotest.tools/assert"
	"log"
	"strings"
	"testing"
)

func TestCreateAccount(t *testing.T) {

	for i := 0; i < 5; i++ {
		account := CreateAccount("")
		fmt.Println("create random account", account)
	}

	specialAccount := CreateAccount("0x299569ae0ae1d40140fd8d9afc54d2f581a292fd13fe88c7033d488119bb95b7")
	fmt.Println("specialAccount=", specialAccount)
	type Accy struct {
		Gx string `json:"gx"`
		Gy string `json:"gy"`
	}
	type Acc struct {
		X string `json:"x"`
		Y Accy   `json"y"`
	}
	var acc Acc
	if err := json.Unmarshal([]byte(specialAccount), &acc); err != nil {
		t.Fatal("unmarshal accoutn failed, err :", err.Error())
	}
	assert.Equal(t, acc.X, "0x299569ae0ae1d40140fd8d9afc54d2f581a292fd13fe88c7033d488119bb95b7")
	assert.Equal(t, acc.Y.Gx, "0x042526b090bc34791599c53df82a129307914728eb9dcafe4a56d66d6c7cc76f")
	assert.Equal(t, acc.Y.Gy, "0x09c7fcbde6288f52f715f460f495714606b1e11897d1cff6fd80c576f6b9a896")
}

func TestReadBalance(t *testing.T) {
	var params = `{
		"CL": {
			"gx":"0x1b5d4b9abe488e61bbb92edff41682560a9d6e02335e2bca9b50881c9540e393",
			"gy":"0x15dc61a9eff5d5a4e70ed97cbce60f7afc69c9925a409ddba365897f1384ca58"
			},
		"CR": {
			"gx":"0x0456301d6013d1cc52455a37c8762f2463b1c7e148d55e1c7d9980d8ed8d54b8",
			"gy":"0x27e78199776a73737fa833429fd64e00fa592ca21dda2e92d3489c96148308cb"
			},
		"x":  "0x20a89bb465e9e2262e25901525509686f6a26b2fba976f1d9ff00a0cdbb362b0"
	}`
	balance := ReadBalance(params)
	assert.Equal(t, balance, 2)
}

func TestSign(t *testing.T) {
	var params = `{
		"address":"0xE4920905e06c6B6070477c40B85756ffDa3cD3E6",
		"account": {
			"x": "0x299569ae0ae1d40140fd8d9afc54d2f581a292fd13fe88c7033d488119bb95b7",
			"y": {
				"gx":"0x042526b090bc34791599c53df82a129307914728eb9dcafe4a56d66d6c7cc76f",
				"gy":"0x09c7fcbde6288f52f715f460f495714606b1e11897d1cff6fd80c576f6b9a896"
			}
		},
		"random":"0x2493a56987e869bbb150c14aff5b2e897d9fe78d6dad8b12c92432473f7e9abd"
	}`
	result := Sign(params)
	fmt.Println("sign result = ", result)
	type SignResult struct {
		C string `json:"c"`
		S string `json:"s"`
	}
	var sr SignResult
	if err := json.Unmarshal([]byte(result), &sr); err != nil {
		t.Fatal("unmarshal sign result failed, err:", err)
	}
	assert.Equal(t, sr.C, "0x206db78bfe338ecffd5b2f0606789ff1045bfbf1e46c897f8fa2e2115e19ed74")
	assert.Equal(t, sr.S, "0x003fe7000561eeebccd4bff3160cd7f8fd50db62904d8fa217692a1f6ca8e7ed")
}

func TestTransferProof(t *testing.T) {
	var params = `{
		"epoch":53712840,
		"value":1,
		"diff" :3,
		"sk"   :"0x20a89bb465e9e2262e25901525509686f6a26b2fba976f1d9ff00a0cdbb362b0",
		"accounts": [
			[{"gx":"0x053225ab9382466d6b094e6e0ef738df4f3182757c6a0d48ab34f30691c422b5",
     		 "gy":"0x069427041ebfef2669c40b87a9d82690c75d332ecd4c1b775decd0e85884e2af"},
			 {"gx":"0x08d0fe696c3aff9c574949d3788e3d5379ee4d99ed9014b738f2825b8af231e7",
     		 "gy":"0x061aa65f5f632f30b3eef67207f2c3804f4e5ca07f4aaf195820b37c845fbd16"}
			],
			[{"gx":"0x0d9aa6c77eda65eee4299282135136c2b54205ccd835df94dc14bd0eb545553c",
     		 "gy":"0x2ead1bbaa97fa27f76e006f747a08cd8cdb45af4032cbfaffeeb6c1046f0d384"},
			 {"gx":"0x20bc85cf65b9afe7e4709592e382e59203e99e2c820c8bf2930707687004f687",
     		 "gy":"0x033e5bb2711dae6a5b6f25be4d150bdc43f505863aa1c8eced61ed74c051bee3"}
			]
		],
		"y":[
			{"gx":"0x2b621590db6b2e3ca3f0e562ed05487caa26ae88c6e1f54883a04e51f6664bc1",
			 "gy":"0x2c1173b211a55f5397ff869ae2feecad664a80730f4f6236a8664a167577ece7"},
			{"gx":"0x20710d65688c288d13a36884422807e5f49fb3785023d49067d1f1f1107cb484",
			 "gy":"0x09ad6933875e421a71f1ed619764ee73b0f628126ca9fe4c153368ed515e6db9"}
		],
		"index":[0, 1]
	}`
	b128.SetSpecialRandom(ebigint.FromHex("c3f4db6cd90e04d6e086f73fdb7a4ccaa4f57e48593d80c11c0fdd1fcac348df").ToRed(b128.Q()))
	result := TransferProof(params)
	log.Println("result = ", result)
}

func TestShuffle(t *testing.T) {
	var params = `{
		"self": {
			"gx":"0x06a50b18dca59140222133e77c3e3074e261caff764ef3520154a6650e7c2dc8",
			"gy":"0x01328650520364c24dfaeac3ed931220b1c425a7abf3154bb3ca254a0e0111a2"
		},
		"friend": {
			"gx":"0x0476db116e871903dac485ad7e2b14da1ef944e4ef113191e1ef2bb7036207a5",
			"gy":"0x1a173b29acf71a20d0393c8b78505295ba447ecea06928889931f025c10b1fec"
		},
		"decoys": [
			{"gx":"0x19447f92b16ab36ad31220030be6318903667005983915c026f852873eac3300",
			 "gy":"0x0bf4bdf1d4e2cdb6792253317c5dea7d479c42f619ba5f4e073be15432462c42"},
			{"gx":"0x184cea3a6b02dbe54da1e8818a94a5e3dfc093ad6cb84a9fb95e9ea8355de7df",
			 "gy":"0x23ece55b936c422d5a76204289777e63e9ac3be1db039fa8aa70bd282d28ea87"}
		]
	}`
	result := Shuffle(params)
	log.Println("shuffle result=", result)
}

func TestBurnProof(t *testing.T) {
	var params = `{
		"accounts":[
			{"gx":"0x19512743220081b7244cae299bb9f053b25d27337ee6b5d760eae272117db2af",
			 "gy":"0x0f7dae3691a53ec20f37e534c34c0eb41d256c8c7f9472e4c618126d6a054b58"},
			{"gx":"0x077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d4",
			  "gy":"0x01485efa927f2ad41bff567eec88f32fb0a0f706588b4e41a8d587d008b7f875"}
		],
		"epoch":53672920,
		"value":1,
		"diff":6,
		"sk":"0x04907c94209e3442e4830c142ba166ac032e511d00fcdf5f01b77d480518fa1a",
		"y":{
			"gx":"0x2af593d93442ca5d86d1f3748e624e68cc7db78da5fa568c40e32753e2e5b64b",
			"gy":"0x301248643b2813c1aaa9fbb7cec25fa6fb8e6d6db1240649b848a545962a9f81"
		},
		"sender":"0xd80ac1fb177c0b8d9c66de2b9657dd57084a2d7f"
	}`
	b128.SetSpecialRandom(ebigint.FromHex("c3f4db6cd90e04d6e086f73fdb7a4ccaa4f57e48593d80c11c0fdd1fcac348df").ToRed(b128.Q()))
	result := BurnProof(params)
	type Response struct {
		U     types.Point `json:"u"`
		Proof string      `json:"proof"`
	}
	var x Response
	if err := json.Unmarshal([]byte(result), &x); err != nil {
		log.Println("invalid burn proof result")
	} else {
		spected := "0x2768012d72bc5e7fb7f6959db4b0bb732bd60f18dc8ce81fc2caa4b86059cc380ed87515b7b2171ff1b7390acecd7780bc627eac55bbba43aeba1129cb5c90f72d622d7897727055209ef3ee43691bf778c9c408ec7b29665dc1e2e70497a8041094d8025847122e367f5c8b5a5f2eb46336a3da12bc07dcbdc3de381e01947005997f85c7a4aabe7413270b42fa8715105b62ce2f295590f7304a05509f7f231bd18d0a3698d24b2e8fb599dfb7133376e9c218d3cc0c35a54267d1d4fda7c0107e8ca0b6072b1ecdd44731cb886f7953792125b211607b8225eeb0501d4ffd08ff4129a6274fd2e60774a4baddfec9d5ebb9d9cd4cba0ebbfcd053f1bbeae712ad1b50cfdbe3e8fa91e2ae3a90b637e4943f8847087eb2fee616ef5203021216a821763f52c2737a82e087b64db796c8bea4bc2c04e548cbbf954fb6c89ed40309bc066e37b70c612103b14d7d01ef03df473d1dccfae0bc917416bae9a78408545dd11198f8903286ff1ba5c6b705ef5dc6173c32cc7104e2a9fbe8c5926312ab58249933a86dc6e69791abbae8b759716e0f283f3b3240050b4919b57654265d169d76881a6dfe71196f559bf64dc095022e24a618b6d74a67f3c5365a0f0b9c9d4faff3e0d5800a34c7afb48bc8a580c4dfa9a04bbdb02d994fab1dff071507155d35b878fd3e4628656b4fcaa66c47665157540fc5aabcbbbba5ade0ce028dea4c8a8fe2fb923839dd30ca890d2b2dda0457375aaad8ff114e2e156882235a8d9d6175480d495fe4530c70927b858739d637642ff019194af88ab729c42a83ec6ad17ef7cde88a4f457610ab3c7314904d9fa906e60076ac87e50235dd0f82477f6f6c9feec058d128fa210c2241315a663248f68378309d78c457a5f509af42d4cd28989da94a49494312c2fbcbeb912c73ec4a5597f6e22f2ec2437416aa52718d97d16171e1889fb785b859110e2453f0d17058749f545c919a5c6b2dec3a9d2ef771ba5ee389f00e11ac197d888c39a7e42c54320d75f49489f8080a7056b8b80b0dceb590539ad1f3745627f1bdbee3fa3c021dd5074dcee2ba742cc7191e6bd880d2da67c7439a25b3870d20e1845fb48d738526681871731760068657de1a6357a807c9debbf9d48c3b03b03bd45997ce9dec5ed467fe56687c296fd6eca473bd9d6d0c1b1703f40f02bb9c021555945766747f5e047f34399c1e9dbe05b693301a645d7d89e9df7fa42b815dc34d3d5d04a2b176232d25d1ae1e7f7d495ba0cea0e46057ed135feda3c47e7672ebfddf7035ae97d4cc3d254500b3d1b46ebea953fba0f170214c5de1152f4992a2fa2b9bf3d0a51c32d58f901a598aa2ce5116f055e411571dadd278e7ff6bbf3a8ee75b3803e7783144e98d0171d9d6f3a5a6144cc6b2aed7f48a8819ee3e6beb9ee61e9e9cae2773b344c50572db713c3d7444cdf76135c579c21b586cea28edb9f197020342a34eeda2c3059195778aeec2dde0cd146c3dd0a956c9521458777eb9e54d403507dbe2255f1d9d0b04ef9b601d24c8696ff0d42854fdffe5f8e7e57689237a01672b9d6d6e2f9d9238b5bf67ea339c2b1d9ee94caab8bd1add3bee594b9204ec57d8ae6bdb"
		assert.Assert(t, strings.Compare(x.Proof, spected) == 0)
		log.Println("burnproof test passed")

	}
}

func TestTxRegister(t *testing.T) {
	var params = `{
		"y": {
			"gx":"0x042526b090bc34791599c53df82a129307914728eb9dcafe4a56d66d6c7cc76f",
			"gy":"0x09c7fcbde6288f52f715f460f495714606b1e11897d1cff6fd80c576f6b9a896"},
		"c": "0x206db78bfe338ecffd5b2f0606789ff1045bfbf1e46c897f8fa2e2115e19ed74",
		"s":"0x003fe7000561eeebccd4bff3160cd7f8fd50db62904d8fa217692a1f6ca8e7ed"
	}`
	result := TxRegister(params)
	log.Println("txRegister data = ", result)
}

func TestTxFund(t *testing.T) {
	var params = `{
		"y": {
			"gx":"0x042526b090bc34791599c53df82a129307914728eb9dcafe4a56d66d6c7cc76f",
			"gy":"0x09c7fcbde6288f52f715f460f495714606b1e11897d1cff6fd80c576f6b9a896"},
		"b": 10
	}`
	result := TxFund(params)
	log.Println("txFund data = ", result)
}

func TestTxTransfer(t *testing.T) {
	var params = `{
		"C":[
			{"gx":"0x1ddfd174ad3852de3a9c60d57cfd3d62fe860474ea49907e380a00a82a52d87c",
			"gy":"0x017b0c0f13ee1917679c5f03b51251ae4b69cc351c5e93e8661affde3ce552fd"},
			{"gx":"0x19fc93c47e565e217a2d9e4a9d8ebe04da5ecafc54a23ead969c7215219b8e52",
			"gy":"0x18f6205c8893c5ce91cbd3f83e792f6ccb97707c3a480796207e0c6ef929c558"}
		],
		"D":{
			"gx":"0x20710d65688c288d13a36884422807e5f49fb3785023d49067d1f1f1107cb484",
			"gy":"0x09ad6933875e421a71f1ed619764ee73b0f628126ca9fe4c153368ed515e6db9"
		},
		"u":{
			"gx":"0x226dad99f7031394f0356feaf08ecc475cd9deea7faafa54eb9f0791de788c78",
			"gy":"0x073a37cf1429825985da05cfa406b67ab80e56e63b6542421cb1e8b094465769"
		},
		"y":[
			{"gx":"0x2b621590db6b2e3ca3f0e562ed05487caa26ae88c6e1f54883a04e51f6664bc1",
			"gy":"0x2c1173b211a55f5397ff869ae2feecad664a80730f4f6236a8664a167577ece7"},
			{"gx":"0x20710d65688c288d13a36884422807e5f49fb3785023d49067d1f1f1107cb484",
			"gy":"0x09ad6933875e421a71f1ed619764ee73b0f628126ca9fe4c153368ed515e6db9"}
		],
		"proof":"0x28d9c4bd611f2a2583b309fff11a958d4b01263203afb4d07e9f46dab5b81c200f2b8d3b2340b6a2b1ad4140b50a1ac88f6010486c2d4df40350f490a1b8e9f50441c9ef4729abd3183f694d760709ea34f3e243e0735966a2f94bbb60455e6e14dc30ec3ed6ffb89d0c6cc8c7cec43db1bd893f23561f58d5e4d2fad5f51d0d0e9e9ba3daa53af4525091b88a75e14623d511f250c5f4524a46e4bd80d8a95e1929f23315bc3839efe5ddbcaf0196694b9344c5ab81472a33302aed64b89e812608554ee30a854e1447b8059bb6f03e77a2a694fe2d01c312c62432859e027a1761097251662cc3c9cd686edfce0bd4dc0ceb34a6ddee6a0cb6ebb3902a4cd930494ae8a6e0d6d6023fa85fa441ff05afd954ab5dc42ad9808df433f95787ce0743cde83b3320bb174bf178076e5687d347c85f44350f05aa31ff1308fc07931c75773c2dfd6552f145e7e8a519a05cba12233cca02a3d087013e6d3b8dbf3c234b1536728f263d6fea6ad5b1687180b7de609aa2802dfad20d5407ce0b43122c84696a1a823d0e829dd627d238e6b7f4f280e18b0306e199de1f8d5567b11a302fe9d75ce0df166f021fb5f1b5eb4287069530577e9d5c031cee2dc4f3c92b20710d65688c288d13a36884422807e5f49fb3785023d49067d1f1f1107cb48409ad6933875e421a71f1ed619764ee73b0f628126ca9fe4c153368ed515e6db9067aefd7cb4cea1ce9718f7b82fbc7f7ca97408523968b9bf5a3b862fb15f76020a98f2cdd228fdccf6772e7df41f20ea7247d0d0e23782eef87cdf8294c30e420710d65688c288d13a36884422807e5f49fb3785023d49067d1f1f1107cb48409ad6933875e421a71f1ed619764ee73b0f628126ca9fe4c153368ed515e6db9069a4a51bb7af0ce3e42dfec26c1b2d4381f861125842d83e7d32278d7b20e200fe6b2b6b7beea1d1a1da536ffb6f5bcf44a3cff6f8143fca85dfb6ce0482cc920710d65688c288d13a36884422807e5f49fb3785023d49067d1f1f1107cb48409ad6933875e421a71f1ed619764ee73b0f628126ca9fe4c153368ed515e6db90263a1a15447842fff45e065d574eb560425dd267257be7c0c8806d00ac348db1a4b400c8596fe14735bcf11d1da8f3221ae4efa85e0671342414c89036a2b1520430d5cb54143e5baa2a3a7a456bb377c98e383990d8bffdb524949b1bb026c24880ef8fca09d54e7b8cca47504fe2b4b833f5b61653bf0b878cabbac46128b2761ff5c1196a902c79d9439155c1df94ad77733eabe1f8b17b6d2a0b69e3d8d1ea24e83b86b80094c08d9b8570140be4e6fc3235a667a74f7507f05041b5572112f9ca088a7314c87af2053e403c00db63280569095727cfb25e925db07d22a0cd0bd1fa7344a6433d77ab56b862675212d275fbd69dc04d1a797ac4c2a744626a55b96a61eb7da7f00eaec27c0f95ebc4cdb7aa1a3a41e31f8df9db6b40c4612150ab835f1e362347c741eb95e61d32075351baeb9c3f4af974262e6fe33f41ac632bba840777d4bb101d7796257b66e76f5c8e2083d610f91418a8d6ae4942c923886ccf6a6a9ed93369e27f03967b28a186db68046e09475e1c1d01c72bc27d180bcb138870a43f020759a43d5be0735a4aae22ccfb646277d474f682b7927fc97c90b8a7a737401df7e53e7aa8c183798970389c01c040d2af4cb53d82c01fde921f0c53daee63ce348363eee3850c144f8c97b384928e5f5cdcf1fdb8721610a9c2e2aee4601f93c8f4871b566245ecee687235f07831e1aa09488f4f213720dd32cca919d1bd2ddc9c9de0a76255374571fa39fdf3db3c0f0f0645b8a15d045068b6971611a08e2c1bc4bd9a428d6a647fe43a2c044cd6ab7a96f3025303a506f65bd377e7b424dffc52e2ca2b1f7fb21909d9fdca2eb3f66a4593c3817c146601726603471b9cd358b52deffe9ec2a7d1776e84dd2935275d06da66c196992f334b6676b9af90d6bea74c4fabdfc572d7e7ed0b70977d8457ce19d4218829359cf8b693793e4d664a5c394923d7e80be1be5bf0324067f45b24d6f5003da41b55abe746c6e1030a46dc805183b6afd4b333ec766a7785c22a7f4b9a10da60ba8a1b937aa2e7c540070ad2aa03252d171583200a60dfff39bc911761a0b43cbea1fd75b31a18af00d89001be5a2b9e906da0590631db89eab4598e60412ca9d2fb27b63cd5a3023f3c0508b0b9f0bb07ded69cc9b57ae03ecc83b50dc15dbecd8431559abdbad17681254680fd5e15260e9566dd3fc035ef7c9e309ca15acabb915efd7c79df89cf5d2ae3781aed1f155dc159bbc629e75b7d01fc5430f5fab91085f868df31cc5dfaca676f8cd1c871a62b21acf808aa37ce0a29a4b16791fe4e3fc6b0c3d7dcb110198e5cd7ab8cc1098e4fa7db085fcd531559d42254518ce5a4029ae7061648d02e588091bbfed4931a8e645204ef4b67a512697070d4812ebfad911543b809c2929d721cf2944ca71692fb2f9c4d2d7bcf97dbb039325b8b10acf8bfc25957de59d311ba2fbf395088dae1f8237d297fb94192f058c043f8e2b2f3a068b1d2b9f91f21b90189c1b70cdb5f30ef1e986a427afd10294aa5a3c3b4a1e65229be7c4b5799c4ece3663ee6db6f5e354e564a2c29a282c99e15422e9061a69ec3b734297cd652c7e12bc6e5c258e13d80e6261ead6dc113da87d7b97c8db5df30d69eed6caa5a565a54d3100de3ad7c8521e6f03f2961d2c8ee64d45fafeab17a6828d00208960dd44c4ba354f938b6706c16abdd831224a70819aaa9b5a0c772b28abaf3583e68cccff9266b0fd1778a46580565d192fd92bb2f37325a639a695f937ff704f593b1b7f2f56a49ae54b1fed6fb45726"
	}`
	result := TxTransfer(params)
	log.Println("txTransfer data = ", result)
}

func TestTxBurn(t *testing.T) {
	var params = `{
		"y": {
			"gx":"0x042526b090bc34791599c53df82a129307914728eb9dcafe4a56d66d6c7cc76f",
			"gy":"0x09c7fcbde6288f52f715f460f495714606b1e11897d1cff6fd80c576f6b9a896"
		},
		"value":1,
		"u":{
			"gx":"0x2c47c494cb8c4abe3481f679b0ba1354c9feeb64bb71b2de97aae8944b5436ff",
			"gy":"0x0f14b0c3e2d4189e57d861e6818a2cc3ad14b4ef8685a2b076dff416d6df28bc"
		},
		"proof":"0x2768012d72bc5e7fb7f6959db4b0bb732bd60f18dc8ce81fc2caa4b86059cc380ed87515b7b2171ff1b7390acecd7780bc627eac55bbba43aeba1129cb5c90f72d622d7897727055209ef3ee43691bf778c9c408ec7b29665dc1e2e70497a8041094d8025847122e367f5c8b5a5f2eb46336a3da12bc07dcbdc3de381e01947005997f85c7a4aabe7413270b42fa8715105b62ce2f295590f7304a05509f7f231bd18d0a3698d24b2e8fb599dfb7133376e9c218d3cc0c35a54267d1d4fda7c0107e8ca0b6072b1ecdd44731cb886f7953792125b211607b8225eeb0501d4ffd08ff4129a6274fd2e60774a4baddfec9d5ebb9d9cd4cba0ebbfcd053f1bbeae712ad1b50cfdbe3e8fa91e2ae3a90b637e4943f8847087eb2fee616ef5203021216a821763f52c2737a82e087b64db796c8bea4bc2c04e548cbbf954fb6c89ed40309bc066e37b70c612103b14d7d01ef03df473d1dccfae0bc917416bae9a78408545dd11198f8903286ff1ba5c6b705ef5dc6173c32cc7104e2a9fbe8c5926312ab58249933a86dc6e69791abbae8b759716e0f283f3b3240050b4919b57654265d169d76881a6dfe71196f559bf64dc095022e24a618b6d74a67f3c5365a0f0b9c9d4faff3e0d5800a34c7afb48bc8a580c4dfa9a04bbdb02d994fab1dff071507155d35b878fd3e4628656b4fcaa66c47665157540fc5aabcbbbba5ade0ce028dea4c8a8fe2fb923839dd30ca890d2b2dda0457375aaad8ff114e2e156882235a8d9d6175480d495fe4530c70927b858739d637642ff019194af88ab729c42a83ec6ad17ef7cde88a4f457610ab3c7314904d9fa906e60076ac87e50235dd0f82477f6f6c9feec058d128fa210c2241315a663248f68378309d78c457a5f509af42d4cd28989da94a49494312c2fbcbeb912c73ec4a5597f6e22f2ec2437416aa52718d97d16171e1889fb785b859110e2453f0d17058749f545c919a5c6b2dec3a9d2ef771ba5ee389f00e11ac197d888c39a7e42c54320d75f49489f8080a7056b8b80b0dceb590539ad1f3745627f1bdbee3fa3c021dd5074dcee2ba742cc7191e6bd880d2da67c7439a25b3870d20e1845fb48d738526681871731760068657de1a6357a807c9debbf9d48c3b03b03bd45997ce9dec5ed467fe56687c296fd6eca473bd9d6d0c1b1703f40f02bb9c021555945766747f5e047f34399c1e9dbe05b693301a645d7d89e9df7fa42b815dc34d3d5d04a2b176232d25d1ae1e7f7d495ba0cea0e46057ed135feda3c47e7672ebfddf7035ae97d4cc3d254500b3d1b46ebea953fba0f170214c5de1152f4992a2fa2b9bf3d0a51c32d58f901a598aa2ce5116f055e411571dadd278e7ff6bbf3a8ee75b3803e7783144e98d0171d9d6f3a5a6144cc6b2aed7f48a8819ee3e6beb9ee61e9e9cae2773b344c50572db713c3d7444cdf76135c579c21b586cea28edb9f197020342a34eeda2c3059195778aeec2dde0cd146c3dd0a956c9521458777eb9e54d403507dbe2255f1d9d0b04ef9b601d24c8696ff0d42854fdffe5f8e7e57689237a01672b9d6d6e2f9d9238b5bf67ea339c2b1d9ee94caab8bd1add3bee594b9204ec57d8ae6bdb"
	}`
	result := TxBurn(params)
	log.Println("txBurn data = ", result)
}

func TestTxSimulateAccounts(t *testing.T) {
	var params = `{
	"y": [
		{
			"gx":"0x2b621590db6b2e3ca3f0e562ed05487caa26ae88c6e1f54883a04e51f6664bc1",
			"gy":"0x2c1173b211a55f5397ff869ae2feecad664a80730f4f6236a8664a167577ece7"
		}],
	"epoch": 53986672
	}`
	result := TxSimulateAccounts(params)
	log.Println("result=", result)
}

func TestParseSimulateAccountsData(t *testing.T) {
	var params = `{
	"data": "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000216b0c45ea08bc9b656e9c892db6c783bb7d9098243b42cc80cd05f8d53f0ed0a226da0b97e781a04b12ea07bf26d079b22d702878a18a4114157f374f16255e31023f71b9fbbc2c346d031558015a64f33225c89a98fd794a4ef730f295dcc831599f42a001b00272147e8ce2ce873ce73b45e2c953f2f708d5efb8b74b66b571a6c8678680a9be1b28a940c1b57349149f7ec984e55772bdf86d7f76ff75bf91cc94d1e39c4956852bac5cfc3252be88a8c561c4b4fe59a6dcbfc719e1890ef21883a0666216b176add3059eae663d4c7c9b40e9d94502f03dd013e296cdd380c2aa6f3eaeb423895cdecddfe1dfa47682f89803b116656c56f4a94ce5007e4"
	}`
	result := ParseSimulateAccountsData(params)
	log.Println("parse simulate accounts result=", result)
	/*
		{"accounts":[
			[
				{"gx":"16b0c45ea08bc9b656e9c892db6c783bb7d9098243b42cc80cd05f8d53f0ed0a",
				"gy":"226da0b97e781a04b12ea07bf26d079b22d702878a18a4114157f374f16255e3"},
				{"gx":"1023f71b9fbbc2c346d031558015a64f33225c89a98fd794a4ef730f295dcc83",
				"gy":"1599f42a001b00272147e8ce2ce873ce73b45e2c953f2f708d5efb8b74b66b57"}
			],
			[
				{"gx":"1a6c8678680a9be1b28a940c1b57349149f7ec984e55772bdf86d7f76ff75bf9",
				"gy":"1cc94d1e39c4956852bac5cfc3252be88a8c561c4b4fe59a6dcbfc719e1890ef"},
				{"gx":"21883a0666216b176add3059eae663d4c7c9b40e9d94502f03dd013e296cdd38",
				"gy":"0c2aa6f3eaeb423895cdecddfe1dfa47682f89803b116656c56f4a94ce5007e4"}
			]
		]}
	*/
}
